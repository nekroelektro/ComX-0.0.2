@using ComX_0._0._2.Helpers
@model ComX_0._0._2.Models.Comments
@{
    var articleHelper = new ArticleHelper();
    var userHelper = new UserHelper();
    string comId = "";
    var artId = new Guid(Request.Params["Id"]);
    var commentList = articleHelper.GetCommentsByArticle(artId);
}
<div class="commentSection">
    @if (!string.IsNullOrEmpty(User.Identity.Name)){
        if (!userHelper.GetCurrentLoggedUser().IsBlocked) {
            using (Html.BeginForm()) {
                @Html.AntiForgeryToken()
                <div class="newCommentSection" style="text-align: center; margin: 0 auto;">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-md-8 center-block" style="display: inline-block; margin: 0 auto; text-align: center; float: none">
                                @Html.Custom_DivFor(model => model.Body, "form-control articleEditorTextArea")
                                @Html.ValidationMessageFor(model => model.Body, "", new {@class = "text-danger"})
                            </div>
                        </div>
                        @Html.ValidationMessage("EmptyComment", new {@style = "color: red"})
                        @Html.ValidationMessage("TwoComments", new {@style = "color: red"})
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" onclick="location.href = '@Url.Action("_Comments", "Articles")'"/>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
    <hr />
    <div class="addedCommentsSection col-xs-12">
        @if (commentList != null) {
            foreach (var item in commentList) {
                 var currentUser = userHelper.GetUserById(item.UserId);
                 <div class="singleCommentSection col-xs-10 col-xs-offset-1">
                     <div class="col-xs-2 commentFooter" style="height: 100%; border-right: solid black 1px; background-color: #222; color: white;">
                         <p>@currentUser.UserName</p>
                         @if (userHelper.GetAvatarByUserId(currentUser.Id) != null) {
                             <img src='@Url.Action("GetAvatar", "Account", new {userId = item.UserId})' style="max-width: 80%; text-align: center; margin: 0 auto;"/>
                         }
                         <p>Date added: <br/> @item.DateOfCreation.ToString()</p>
                     </div>
                     <div class="col-xs-9 commentBody" style="height: 100%; max-width: 90%">
                         @Html.Raw(WebUtility.HtmlDecode(item.Body))
                     </div>
                     <div class="col-xs-1 commentOptions" style="height: 100%;">
                         <button type="button" class="btn btn-danger .btn-sm popupCommentDelete" data-id ="@item.Id" data-art ="@artId" href="#test-modal" style="padding-top: 1em; padding-right: 1em;">
                             <span class="glyphicon glyphicon-remove-sign" aria-hidden="true"></span>
                         </button>
                     </div>

                     <div id="test-modal" class="mfp-hide white-popup">
                         <p>Potwierdź</p>
                         <hr/>
                         <p>Czy na bank chcesz usunąć swój komentarz?</p>
                         <button type="button" class="btn btn-danger .btn-sm btnConfirmDeletion" id="commId" >
                             Ta!
                         </button>
                         <button type="button" class="btn btn-info .btn-sm btnCancelDeletion">Nope!</button>
                     </div>
                 </div>
             }
        }
    </div>
</div>

<script>
    jQuery(document).ready(function($) {
        var comIdentificator;
        var artIdentificator;
        $('.articleEditorTextArea').trumbowyg();
        $('.popupCommentDelete').magnificPopup({
            type: 'inline',
            preloader: false,
            modal: true
        });
        $('.popupCommentDelete').click(function() {
            comIdentificator = $(this).data('id').toString();
            artIdentificator = $(this).data('art').toString();
            @*@comId = comIdentificator;*@
            console.log(comIdentificator);
        });
        $(document).on('click', '.btnConfirmDeletion', function(e) {
            e.preventDefault();
            $.magnificPopup.close();
            window.location.href = '@Url.Action("DeleteComment", "Articles")?commentId='+comIdentificator+'&articleId='+artIdentificator;
        });
        $(document).on('click', '.btnCancelDeletion', function (e) {
            e.preventDefault();
            $.magnificPopup.close();
        });
    });
</script>
<style>
    .white-popup {
  position: relative;
  background: #FFF;
  padding: 40px;
  width: auto;
  max-width: 400px;
  margin: 20px auto;
  text-align: center;
}
</style>