@using ComX_0._0._2.Helpers
@using GridMvc.Html
@using GridMvc.Sorting
@model IEnumerable<ComX_0._0._2.Views.Articles.Models.DtoModels.ArticleDto>
@{
    Layout = "~/Views/Configuration/_Configuration.cshtml";
    var articleHelper = new ArticleHelper();
    var userHelper = new UserHelper();
}
<div>
    <button type="button" class="btn btn-success btn-m" onclick="location.href = '/Articles/Edit?createMode=true&id=00000000-0000-0000-0000-000000000000&isDiary=false'">
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Dodaj artykuł
    </button>
    <h2>Twoje artykuły (@Model.Where(x => x.IsPublished).Count().ToString()/@Model.Count().ToString() opublikowane):</h2>
    <div class="col-xs-12 center-block">
        @Html.Grid(Model.Where(x => x.IsDiary == false)).Named("articleGrid").Columns(columns =>
   {
   columns.Add(o => o.Id, true);
   columns.Add(x => x.Name).Titled("Tytuł").SetWidth(550);
   columns.Add(x => x.IsPublished).Titled("Opublikowano").RenderValueAs(x => x.IsPublished ? "Tak" : "Nie").SetWidth(50);
   columns.Add(x => x.Category).Titled("Kategoria").Filterable(true).SetWidth(130);
   columns.Add(x => x.Subcategory).Titled("Subkategoria").Filterable(true).SetWidth(130);
   columns.Add(x => x.DateOfCreation).Titled("Data dodania").SortInitialDirection(GridSortDirection.Ascending).SetWidth(180);
   columns.Add().Titled("Akcje")
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(o => @<div class="configurationArticlesGoButtonContainer"><button type="button" class="btn nekrobutton-blue">Przejdź</button></div>);
   columns.Add()
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(o => @<div class="configurationArticlesEditButtonContainer"><button type="button" class="btn nekrobutton-green">Edytuj</button></div>);
}).WithPaging(10).Sortable(true).Filterable(true)
    </div>

    <h2>Pamiętniki:</h2>
    @if (userHelper.UserIsSuperAdmin(userHelper.GetCurrentLoggedUserId()))
    {
        <div class="col-xs-12 center-block">
            @Html.Grid(Model.Where(x => x.IsDiary)).Named("diariesGrid").Columns(columns =>
   {
       columns.Add(o => o.Id, true);
       columns.Add(x => x.Name).SetWidth(550);
       columns.Add(x => x.IsPublished).Titled("Published").RenderValueAs(x => x.IsPublished ? "Yes" : "No").SetWidth(50);
       columns.Add(x => x.DateOfCreation).Titled("Date added").SortInitialDirection(GridSortDirection.Ascending).SetWidth(180);
       columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.RenderValueAs(o => @<div class="configurationDiariesGoButtonContainer"><button type="button" class="btn nekrobutton-blue">Przejdź</button></div>);
   columns.Add()
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .RenderValueAs(o => @<div class="configurationDiariesEditButtonContainer"><button type="button" class="btn nekrobutton-green">Edytuj</button></div>);
   }).WithPaging(10).Sortable(true).Filterable(true)
        </div>
    }
</div>


@*SCRIPTS FOR VIEW*@
<script type="text/javascript" src="~/Views/Configuration/Scripts/ConfigurationArticles.js"></script>