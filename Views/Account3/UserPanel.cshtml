@using ComX_0._0._2.Helpers
@model ComX_0._0._2.Models.Users
@{
    ViewBag.Title = "User Panel";
    var userHelper = new UserHelper();

    var str = "";
    if (Model.IsBlocked) {
        str = "Unblock user";
    }
    else {
        str = "Block user";
    }
}

<div class="userPanelContainer col-md-12">
    <div class="greetUserPanel">
        <h2>Witojcie, @Model.UserName!!!</h2>
    </div>
    <div class="infoUserPanel">
        <b>Zarejestrowany od: @Model.DateOfCreation.Value.ToShortDateString()</b>
    </div>
    @if (Model.Avatar == null) {
        using (Html.BeginForm("AddAvatar", "Account", FormMethod.Post,
            new {enctype = "multipart/form-data"})) {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.Label("Upload image", new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        <input type="file" id="imgUp" name="avatar"/>
                    </div>
                    @*@Html.ValidationMessage("ImageUpload", new {@style = "color: red"})*@
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Upload" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }
    }
    else {
        <img src='@Url.Action("GetAvatar", "Account", new {userId = Model.Id})' style="max-width: 30%; text-align: center; margin: 0 auto;"/>
    }
    @using (Html.BeginForm("ChangeRole", "Account")) {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-lg-10">
                    @Html.DropDownListFor(model => model.Role, new List<SelectListItem>(ViewBag.RoleList), new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Role, "", new {@class = "text-danger"})
                </div>
            </div>
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }
    <div class="col-md-offset-2 col-md-12" style="margin: 0 auto; text-align: center;">
        <button type="button" class="btn btn-warning btn-m popupUserBlock" data-id="@Model.Id" href="#popupUserBlock">
            <span class="glyphicon glyphicon-lock" aria-hidden="true"></span>@str
        </button>
        <button type="button" class="btn btn-danger btn-m popupUserDelete" data-id="@Model.Id" href="#popupUserDelete">
            <span class="glyphicon glyphicon-erase" aria-hidden="true"></span> Delete user
        </button>
    </div>
        <div id="popupUserDelete" class="mfp-hide white-popup">
            <p>Potwierdź</p>
            <hr />
            <p>Czy na bank chcesz usunąć tego użytkownika? (użytkownik będzie wypierdolony z bazy!)</p>
            <button type="button" class="btn btn-danger .btn-sm btnConfirmDeletion" id="commId">
                Ta!
            </button>
            <button type="button" class="btn btn-info .btn-sm btnCancelDeletion">Nope!</button>
        </div>

        <div id="popupUserBlock" class="mfp-hide white-popup">
            <p>Potwierdź</p>
            <hr />
            <p>Czy na bank chcesz zablokować tego użytkownika?</p>
            <button type="button" class="btn btn-danger .btn-sm btnConfirmDeletion" id="commId">
                Ta!
            </button>
            <button type="button" class="btn btn-info .btn-sm btnCancelDeletion">Nope!</button>
        </div>
    </div>

<script>
    jQuery(document).ready(function($) {
        var userIdentificator;
        var blockOrDelete;
        $('.popupUserDelete').magnificPopup({
            type: 'inline',
            preloader: false,
            modal: true
        });
        $('.popupUserDelete').click(function() {
            userIdentificator = $(this).data('id').toString();
            blockOrDelete = 'delete';
        });
        $(document).on('click', '.btnConfirmDeletion', function(e) {
            e.preventDefault();
            $.magnificPopup.close();
            if (blockOrDelete == 'delete') {
                window.location.href = '@Url.Action("DeleteUser", "Account")?userId=' + userIdentificator;
            } else {
                window.location.href = '@Url.Action("BlockingUser", "Account")?userId=' + userIdentificator;
            }
        });
        $(document).on('click', '.btnCancelDeletion', function (e) {
            e.preventDefault();
            $.magnificPopup.close();
        });

        $('.popupUserBlock').magnificPopup({
            type: 'inline',
            preloader: false,
            modal: true
        });
        $('.popupUserBlock').click(function () {
            userIdentificator = $(this).data('id').toString();
            blockOrDelete = 'block';
        });
    });
</script>
<style>
    .white-popup {
        position: relative;
        background: #FFF;
        padding: 40px;
        width: auto;
        max-width: 400px;
        margin: 20px auto;
        text-align: center;
    }
</style>

